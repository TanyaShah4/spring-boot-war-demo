pipeline{
    agent any
     tools {
         maven 'maven'
     }
     environment {
        SONARSERVER = "sonarserver"
        SONARSCANNER = "sonarscanner"
    }
    stages{
        stage("Test"){
            steps{
                // mvn test
                sh 'mvn test'
                slackSend channel: 'medium', message: 'job started'
              
            }
        }
        stage("Build"){
            steps{
                // mvn package
                sh 'mvn package'
                
            }
        }
        stage("Deploy on test"){
            steps{
                // deploy on container -> plugin
                deploy adapters: [tomcat9(credentialsId: 'tomcat', path: '', url: 'http://13.127.52.229:8080/')], contextPath: '/app', war: '**/*.war'
                
            }
        }
        stage("Deploy on prod"){
         input {
                message "should we continue?"
                ok "yes we should"
            }
            steps{
                // deploy on container -> plugin
                deploy adapters: [tomcat9(credentialsId: 'tomcat', path: '', url: 'http://65.0.31.253:8080/')], contextPath: '/app', war: '**/*.war'
               
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
            slackSend channel: 'medium', message: 'job success'
        }
        failure{
            echo "========pipeline execution failed========"
            slackSend channel: 'medium', message: 'job failed'
        }
    }
}    

stage('CODE ANALYSIS with SONARQUBE') {
          
		  environment {
             scannerHome = tool 'sonarscanner'
          }
          steps {
            withSonarQubeEnv('sonarserver') {
               sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                   -Dsonar.projectName=vprofile-repo \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=src/ \
                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
            }
          }
}
